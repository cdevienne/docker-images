#!/bin/bash
set -e

# Set environment variables
export BACKUP_DATA_DIR="${BACKUP_DATA_DIR:-`pwd`}"
export BACKUP_CONFIG_DIR="${BACKUP_CONFIG_DIR:-`pwd`}"
export BACKUP_COMMAND="${1:-init}"

# Make sure the specified directories are present
mkdir -p "${BACKUP_DATA_DIR}"
mkdir -p "${BACKUP_CONFIG_DIR}"

# Check for a known command
BACKUP_COMMAND=$1
case "${BACKUP_COMMAND}" in
  "trigger" )
    shift
    TASK=$1 && shift
    # Execute the backup command
    command="exec backup perform --config-file=${BACKUP_CONFIG_DIR}/config.rb --root-path=${BACKUP_DATA_DIR} --trigger ${TASK}"
    ;;
  "schedule"|"scheduler"|"cron" )
    shift
    # Write the crontab entries from the whenever schedule
    whenever --load-file "${BACKUP_CONFIG_DIR}/schedule.rb" > "/etc/cron.d/backups"
    # Call the phusion baseimage init docker to start the various daemons including crond
    command="/sbin/my_init"
    ;;
  "init" )
    # Call the phusion baseimage init docker to start the various daemons including crond
    command="/sbin/my_init"
    ;;
  * )
    command="$@"
    ;;
esac

${command}
